---
import type { ImageMetadata } from "astro";
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import type { Service } from "@types/services";
import ServicesGrid from "@components/services/ServicesGrid.tsx";

type Props = {
  title: string;
  description?: string;
  titleClassName?: string;
  descriptionClassName?: string;
  showHeader?: boolean;
};

const {
  title,
  description,
  titleClassName =
    "text-3xl font-bold text-primary-blue-800 md:text-4xl",
  descriptionClassName =
    "text-base md:text-lg lg:text-xl font-light text-primary-grey-800",
  showHeader = true,
} = Astro.props satisfies Props;

const imageModules = import.meta.glob<{ default: ImageMetadata }>(
  "../../assets/img/servicios/*.jpg",
  { eager: true }
);
const services: Service[] = (await getCollection("services"))
  .sort((a, b) => a.data.order - b.data.order)
  .map(({ id, data }: CollectionEntry<"services">) => {
    const imageModule =
      imageModules[`../../assets/img/servicios/${data.image}`];

    if (!imageModule) {
      throw new Error(`No se encontr√≥ la imagen para el servicio "${id}"`);
    }

    return {
      id,
      title: data.title,
      subtitle: data.subtitle,
      description: data.description,
      image: imageModule.default,
      modal: data.modal,
    } satisfies Service;
  });
---

<section class="py-16 lg:py-24 container mx-auto">
  <div class="space-y-12 lg:space-y-16 mx-auto max-w-7xl">
    {showHeader && (
      <div
        class="mx-auto flex max-w-4xl lg:max-w-5xl flex-col items-center gap-4 text-center"
      >
        <h2 class={titleClassName}>{title}</h2>
        {description && <p class={descriptionClassName}>{description}</p>}
      </div>
    )}
    <ServicesGrid services={services} client:load />
  </div>
</section>
